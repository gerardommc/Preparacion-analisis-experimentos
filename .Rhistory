df.3$Correlación <- "Baja"
df.3$Signo <- "Negativo"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativo"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(~Correlación + Signo) +
theme_bw()
y1 <- x * runif(100, 2, 2.05) - runif(100, 10, 12)
y2 <- x * runif(100, -2.7, -2) + runif(100, 10, 12)
y3 <- x * runif(100, -2.05, -2) + runif(100, 10, 12)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positivo"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positivo"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativo"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativo"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(~Correlación + Signo) +
theme_bw()
library(ggplot2)
set.seed(123)
x <- rnorm(100, 10, 1)
y <- x * runif(100, 2, 2.7) - runif(100, 10, 12)
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
theme_bw()
y1 <- x * runif(100, 2, 2.05) - runif(100, 10, 12)
y2 <- x * runif(100, -2.7, -2) + runif(100, 10, 12)
y3 <- x * runif(100, -2.05, -2) + runif(100, 10, 12)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positivo"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positivo"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativo"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativo"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(~Correlación + Signo) +
theme_bw()
library(ggplot2)
set.seed(123)
x <- rnorm(100, 10, 1)
y <- x + runif(100, -1, 1)
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
theme_bw()
library(ggplot2)
set.seed(123)
x <- rnorm(100, 10, 1)
y <- x + rnorm(100, 0, 1)
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
theme_bw()
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
theme_bw()
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + runif(100, 0, 1)
y3 <- -x + runif(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
library(ggplot2)
set.seed(123)
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, 0, 1)
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
theme_bw()
df.1 <- data.frame(x = x, y = y)
ggplot(df.1) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
theme_bw()
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + runif(100, 0, 1)
y3 <- -x + runif(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
y2 <- -x + runif(100, 0, 10)
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + runif(100, 0, 10)
y3 <- -x + runif(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + runif(100, 0, 2)
y3 <- -x + runif(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + runif(100, 0, 3)
y3 <- -x + runif(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
y1 <- x + rnorm(100, 0, 0.2)
y2 <- -x + rnorm(100, 0, 1)
y3 <- -x + rnorm(100, 0, 0.2)
df.1$Correlación <- "Baja"
df.1$Signo <- "Positiva"
df.2 <- data.frame(x = x, y = y1)
df.2$Correlación <- "Alta"
df.2$Signo <- "Positiva"
df.3 <- data.frame(x = x, y = y2)
df.3$Correlación <- "Baja"
df.3$Signo <- "Negativa"
df.4 <- data.frame(x = x, y = y3)
df.4$Correlación <- "Alta"
df.4$Signo <- "Negativa"
df.5 <- rbind(df.1, df.2, df.3, df.4)
ggplot(df.5) + geom_point(aes(x = x, y = y)) +
geom_smooth(aes(x = x, y = y), method = "lm") +
facet_grid(vars(Correlación), vars(Signo)) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
set.seed(123)
x <- rnorm(1000)
y1 <- x * sample(c(-1, 1), 1) + rnorm(1000)
y2 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.5)
y3 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.1)
plot(x, y1)
plot(x, y2)
plot(x, y3)
set.seed(123)
x <- rnorm(1000)
y1 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 2)
y2 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.5)
y3 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.1)
plot(x, y3)
plot(x, y1)
set.seed(123)
x <- rnorm(1000)
y1 <- x * sample(c(-1, 1), 1) + rnorm(1000)
y2 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.5)
y3 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.1)
plot(x, y1)
plot(x, y2)
plot(x, y3)
set.seed(123)
x <- rnorm(1000)
y1 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 3)
y2 <- x * sample(c(-1, 1), 1) + rnorm(1000)
y3 <- x * sample(c(-1, 1), 1) + rnorm(1000, 0, 0.1)
par(mfrow = c(1, 2))
plot(x, y1); plot(x, y2), plot(x, y3)
0.6*0.6
lm(x ~ y1)
summary(lm(x ~ y1))
-0.31^2
summary(lm(x ~ y2))
0.73^2
summary(lm(x ~ y3))
0.99455^2
names(co2)
knitr::opts_chunk$set(echo = TRUE)
co2 <- read.csv("Unidad 3-ANOVA II/CO2-2.csv")
names(co2)
co2 <- read.csv("Unidad 3-ANOVA II/CO2-2.csv")
boxplot(Captura ~ Concentración + Tratamiento, co2)
library(tidyverse); library(rstatix)
shap.test <- co2 %>%
group_by(Concentración, Tratamiento) %>%
shapiro_test(Captura)
library(tidyverse); library(rstatix)
shap.test <- co2 %>%
group_by(Concentración, Tratamiento) %>%
shapiro_test(Captura)
shap.test
library(lme4)
m1 <- lmer(Captura ~ Concentración * Tratamiento + (1|Ciudad), co2)
summary(m1)
library(lme4)
m1 <- lmer(Captura ~ Concentración * Tratamiento + (1|Ciudad), co2)
car::Anova(m1, type = 2)
m2 <- lmer(Captura ~ Concentración + Tratamiento + (1|Ciudad), co2)
car::Anova(m2, type = 2)
m3 <- lmer(Captura ~ Concentración + (1|Ciudad), co2)
car::Anova(m3, type = 2)
anova(m2, m3)
plot(m2)
shapiro.test(residuals(m2))
data()
Recall
data <- read.table(file = "http://personality-project.org/r/datasets/R.appendix3.data",
header = T)
data
names(data) <- c("id", "sujeto", "connotacion", "recuerdo")
write.csv(data, "Unidad 4-Otros disenos/Recuerdo.csv")
knitr::opts_chunk$set(echo = TRUE)
dat <- datarium::headache
head(dat)
boxplot(pain_score ~ gender)
boxplot(pain_score ~ gender, dat)
boxplot(pain_score ~ gender, dat)
boxplot(pain_score ~ risk, dat)
boxplot(pain_score ~ gender, dat)
boxplot(pain_score ~ risk, dat)
boxplot(pain_score ~ drug, dat)
boxplot(pain_score ~ gender, dat)
boxplot(pain_score ~ risk, dat)
boxplot(pain_score ~ treatment, dat)
boxplot(pain_score ~ gender, dat)
boxplot(pain_score ~ risk, dat)
boxplot(pain_score ~ treatment, dat)
boxplot(pain_score ~ gender + risk + treatment, dat)
library(tidyverse); library(rstatix)
shap.test <- dat %>%
group_by(gender, risk, treatment) %>%
shapiro_test(pain_score)
shap.test
table(dat$gender)
table(dat$risk)
table(dat$treatment)
m1 <- aov(pain_score ~ gender * risk * treatment, dat)
car::Anova(m1, type = 2)
m2 <- aov(pain_score ~ gender + risk + treatment + gender:treatment + gender:risk:treatment, dat)
car::Anova(m2, type = 2)
anova(m1, m2)
plot(m1)
plot(m2)
plot(m1)
plot(m1)
knitr::opts_chunk$set(echo = TRUE)
weight <- datarium::weightloss
knitr::kable(head(weight)) # Imprimiendo las primeras seis filas de weightloss
weight.l <- reshape2::melt(weight, id.vars = c("id", "diet", "exercises"))
names(weight.l) <- c("id", "diet", "exercises", "time", "loss")
knitr::kable(head(weight.l)) #Imprimiendo las primeras seis filas de la tabla resultante
library(tidyverse); library(rstatix)
shap.test <- weight.l %>%
group_by(diet, exercises, time) %>%
shapiro_test(loss)
knitr::kable(shap.test, caption = "Resultados de la prueba de Shapiro dentro de cada grupo experimental.", align = "c")
library(lme4)
m1 <- lmer(loss ~ (diet/time) * (exercises/time) + (1|id/exercises/time) + (1|id/diet/time), weight.l)
car::Anova(m1, type = 2)
summary(m1)
plot(m1)
shapiro.test(residuals(m1))
mean(residuals(m1))
boxplot(loss ~ diet + exercises + time, weight.l)
knitr::opts_chunk$set(echo = TRUE)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -2, -4) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -2, -4) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly
x1 * runif(1, 2, 4)
x1^2 * runif(1, -2, -4)
x1
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + x1^4 * runif(1, -4, -2) rnorm(1000, mean = 10, sd = 10)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + x1^4 * runif(1, -4, -2) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin))
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 2)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin))
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 1)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 3)
y.poly <- x1 * runif(1, 2, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, 2, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poly)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin))
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin)) +
geom_smooth(aes(x = x, y = y.lin), method = "gam")
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin)) +
geom_smooth(aes(x = x1, y = y.lin), method = "gam")
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poly))+
geom_smooth(aes(x = x1, y = y.poly), method = "gam")
library(plot3D)
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y))
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult))
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "black", pch = 20, alpha = 0.5))
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey10", pch = 20, alpha = 0.5))
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey70", pch = 20, alpha = 0.5))
library(plot3D)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5))
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
mult.preds <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
new.data$predictions <- predict(mult, newdata = new.data)
library(plot3D)
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
new.data$predictions <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5))
with(new.data, scatter3D(x = x1, y = x2, z = predictions, type = "l",
colkey = NULL,
col = "black", add = T))
mult.preds.m <- matrix(mult.preds, 20, 20)
library(plot3D)
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
new.data$predictions <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5))
with(new.data, persp3D(x = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
y = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20),
z = mult.preds, type = "l",
colkey = NULL,
col = "black", add = T))
library(plot3D)
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
new.data$predictions <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5))
with(new.data, persp3D(x = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
y = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20),
z = mult.preds.m, type = "l",
colkey = NULL,
col = "black", add = T))
library(plot3D)
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
new.data$predictions <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5))
with(new.data, persp3D(x = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
y = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20),
z = mult.preds.m, type = "l",
colkey = NULL,
col = "black", add = T, alpha = 0.1))
library(plot3D)
mult <- lm(y.mult ~ x1 + x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
new.data$predictions <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "grey30", pch = 20, alpha = 0.5,
xlab = "x1", ylab = x2, zlab = y))
