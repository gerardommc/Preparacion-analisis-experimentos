summary(m1)
anova(m1)
m2 <- lm(score ~ treatment * (exercise + age), estres)
summary(m2)
anova(m2)
m3 <- lm(score ~ treatment * exercise + age, estres)
summary(m3)
m3 <- lm(score ~ treatment * exercise + age, estres)
anova(m3)
anova(m1, m2, m3)
AIC(m1, m2, m3)
par(mfrow = c(2,2))
plot(m1)
par(mfrow = c(2,2))
plot(m3)
shapiro.test(residuals(m1))
x1 <- rnorm(150, 15, 3)
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 4)
plot(x2, x3)
cor.test(x2, x3)
x4 <- rnorm(100, 25, 3)
beta.4.1 <- runif(3, 1, 1)
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, 1, 2.5)
beta.1.2 <- runif(3, -2, 2)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -5, 0)
library(foreach)
y <- foreach(i in 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
library(foreach)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.1
df.mel <- reshape2::melt(df.1, id.vars = c(x1, x2, x3, x4))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
df.mel
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y))
names(df.mel)
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y))
ggplot(df.mel) + geom_point(aes(x = x2, y = y))
ggplot(df.mel) + geom_point(aes(x = x3, y = y))
ggplot(df.mel) + geom_point(aes(x = x4, y = y))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
beta.0
set.seed(1646034)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, 1, 2.5)
beta.1.2 <- runif(3, -2, 2)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -5, 0)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.1
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, 1, 2.5)
beta.1.2 <- runif(3, -2, 2)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -5, 0)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, 1, 2.5)
beta.1.2 <- runif(3, -3, 3)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -5, 0)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, 1, 2.5)
beta.1.2 <- runif(3, -4, 4)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -5, 0)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = max(y)/(max(y) + min(y)), colour = Tratamiento))
df.mel$y <- with(df.mel,  max(y)/(max(y) + min(y)))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) + min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
df.mel$y <- with(df.mel, (y + min(y))/(max(y) + min(y)))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) + min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
beta.1.2
beta.1.2 <- runif(3, -4, 4)
beta.1.2
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
beta.4.1.1
beta.4.1.1 <- runif(3, 5, 0)
beta.4.1.1 <- runif(3, 0, 5)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
beta.4.1.1
beta.4.1.1 <- runif(3, -1, 1)
library(foreach)
beta.4.1.1 <- runif(3, -2, 2)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
beta.4.1.1
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
beta.4.1
ggplot(df.mel) + geom_point(aes(x = x4 * x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = x2))
ggplot(df.mel) + geom_point(aes(x = x1, y = x3))
ggplot(df.mel) + geom_point(aes(x = x2, y = x3))
ggplot(df.mel) + geom_point(aes(x = x2, y = x4))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4))
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
beta.1.2
beta.1.2 <- runif(3, -4, 4)
beta.1.2
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
beta.1.1 <- runif(3, -2.5, 2.5)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
beta.1.2 <- runif(3, -4, 4)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x4*x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x3, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x3, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
write.csv(df.1, "Unidad 5-Regresion correlacion/Ejercicio-Regresion-ANCOVA.csv")
write.csv(df.1, "Unidad 5-Regresion correlacion/Ejercicio-Regresion-ANCOVA.csv")
saveRDS(list(beta.0 = beta.0,
beta.1.1 = beta.1.1,
beta.1.2 = beta.1.2,
beta.2.1 = beta.2.1,
beta.4.1 = beta.4.1,
beta.4.1.1 = beta.4.1.1),
"Unidad 5-Regresion correlacion/Coeficientes-regresión.rds")
install.packages(c("bookdown", "prettydoc"))
install.packages("distill")
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("curl")
install.packages("curl")
install.packages("gargle")
install.packages("googledrive")
install.packages("googsheets4")
install.packages("googlesheets4")
install.packages("httr")
install.packages("rvest")
install.packages("tidyverse")
install.packages("rstatix")
set.seed(12345)
x1 <- rnorm(100, 15, 3)
x2 <- rnorm(100, -20, 4)
x3 <- x2 + rnorm(100, 0, 2)
x4 <- rnorm(100, 25, 3)
beta.0 <- runif(3, -3, 3)
beta.1.1 <- runif(3, -2.5, 2.5)
beta.1.2 <- runif(3, -4, 4)
beta.2.1 <- runif(3, 1, 2)
beta.4.1 <- runif(3, 1, 1)
beta.4.1.1 <- runif(3, -2, 2)
library(foreach)
y <- foreach(i = 1:3, .combine = cbind) %do% {
beta.0[i] + beta.1.1[i] * x1 + beta.1.2[i] * x1^2 +
beta.2.1[i] * x2 + beta.4.1[i] * x4 + beta.4.1.1[i] * x4 * x1
}
y <- data.frame(y)
names(y) <- c("y1", "y2", "y3")
df.1 <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
library(ggplot2)
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4 colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4, colour = Tratamiento))
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
ggplot(df.mel) + geom_point(aes(x = x2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x3, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1 * x4, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1 ^2, y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1 , y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x2 , y = y, colour = Tratamiento))
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
ggplot(df.mel) + geom_point(aes(x = x2 , y = y, colour = Tratamiento))
nrow(df.1)
write.csv(df.1, "Unidad 5-Regresion correlacion/Ejercicio-Regresion-ANCOVA.csv")
saveRDS(list(beta.0 = beta.0,
beta.1.1 = beta.1.1,
beta.1.2 = beta.1.2,
beta.2.1 = beta.2.1,
beta.4.1 = beta.4.1,
beta.4.1.1 = beta.4.1.1),
"Unidad 5-Regresion correlacion/Coeficientes-regresión.rds")
round(df.1, 2)
df.mel
levels(df.mel$Tratamiento) <- c("A", "B", "C")
round(df.mel, 1)
df.1 <- round(df.1, 1)
df.mel <- reshape2::melt(df.1, id.vars = c("x1", "x2", "x3", "x4"))
names(df.mel) <- c("x1", "x2", "x3", "x4", "Tratamiento", "y")
df.mel$y <- with(df.mel, (y + min(y))/(max(y) - min(y)))
levels(df.mel$Tratamiento) <- c("A", "B", "C")
ggplot(df.mel) + geom_point(aes(x = x2 , y = y, colour = Tratamiento))
ggplot(df.mel) + geom_point(aes(x = x1, y = x4, colour = Tratamiento))
write.csv(df.mel, "Unidad 5-Regresion correlacion/Ejercicio-Regresion-ANCOVA.csv")
write.csv(df.mel, "Unidad 5-Regresion correlacion/Ejercicio-Regresion-ANCOVA.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
co2 <- read.csv("Unidad 3-ANOVA II/CO2-2.csv")
co2
library(lme4)
library(lme4)
modelo1 <- lmer(Captura ~ Concentracion * Tratamiento + (1|Ciudad), co2)
library(lme4)
modelo1 <- lmer(Captura ~ Concentración * Tratamiento + (1|Ciudad), co2)
car::Anova(modelo1, type =2)
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Unidad 4-Otros disenos/Recuerdo.csv")
head(datos)
library(tidyverse); library(rstatix)
shap.table <- datos %<% group_by(sujeto, connotacion) %<%
shapiro_test(recuerdo)
library(tidyverse); library(rstatix)
shap.table <- datos %>% group_by(sujeto, connotacion) %>%
shapiro_test(recuerdo)
datos <- read.csv("Unidad 4-Otros disenos/Recuerdo.csv", stringsAsFactors = T)
head(datos)
library(tidyverse); library(rstatix)
shap.table <- datos %>% group_by(sujeto, connotacion) %>%
shapiro_test(recuerdo)
library(tidyverse); library(rstatix)
shap.table <- datos %>% group_by(connotacion) %>%
shapiro_test(recuerdo)
shap.table
knitr::opts_chunk$set(echo = TRUE)
datos <- read.csv("Unidad 4-Otros disenos/Recuerdo.csv", stringsAsFactors = T)
head(datos)
library(tidyverse); library(rstatix)
shap.table <- datos %>% group_by(connotacion) %>%
shapiro_test(recuerdo)
shap.table
m1 <- aov(recuerdo ~ connotacion + Error(sujeto/connotacion), datos)
summary(m1)
knitr::opts_chunk$set(echo = TRUE)
set.seed(12345)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 1)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + x1 * x2 * runif(1, -4, 4) + rnorm(1000, mean = 0, sd = 3)
y.poli <- x1 * runif(1, -4, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, -4, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poli)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin)) +
geom_smooth(aes(x = x1, y = y.lin), method = "lm") +
labs(x = "x", y = "y")+
theme_bw()
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poli)) +
geom_smooth(aes(x = x1, y = y.poli), method = "gam")+
labs(x = "x", y = "y") +
theme_bw()
set.seed(12345)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 1)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + x1 * x2 * runif(1, -4, 4) + rnorm(1000, mean = 0, sd = 3)
y.poli <- x1 * runif(1, -4, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, -4, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poli)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin)) +
geom_smooth(aes(x = x1, y = y.lin), method = "lm") +
labs(x = "x", y = "y")+
theme_bw()
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poli)) +
geom_smooth(aes(x = x1, y = y.poli), method = "gam")+
labs(x = "x", y = "y") +
theme_bw()
set.seed(12345)
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 1)
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + x1 * x2 * runif(1, -4, 4) + rnorm(1000, mean = 0, sd = 3)
y.poli <- x1 * runif(1, -4, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, -4, 4) + rnorm(1000, mean = 10, sd = 10)
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poli)
library(ggplot2)
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.lin)) +
geom_smooth(aes(x = x1, y = y.lin), method = "lm") +
labs(x = "x", y = "y")+
theme_bw()
ggplot(lin.rels) + geom_point(aes(x = x1, y = y.poli)) +
geom_smooth(aes(x = x1, y = y.poli), method = "gam")+
labs(x = "x", y = "y") +
theme_bw()
library(plot3D)
mult <- lm(y.mult ~ x1 + x2 + x1 * x2, lin.rels)
new.data <- expand.grid(x1 = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
x2 = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20))
mult.preds <- predict(mult, newdata = new.data)
mult.preds.m <- matrix(mult.preds, 20, 20)
with(lin.rels,
scatter3D(x = x1, y = x2, z = y.mult,
colkey = NULL,
col = "black", pch = 20, alpha = 0.1,
xlab = "x1", ylab = "x2", zlab = "y"))
with(new.data, persp3D(x = seq(min(lin.rels$x1), max(lin.rels$x1), len = 20),
y = seq(min(lin.rels$x2), max(lin.rels$x2), len = 20),
z = mult.preds.m, type = "l",
colkey = NULL,
col = "blue", add = T, alpha = 0.3))
set.seed(12345) # Semilla
x1 <- rnorm(1000)
x2 <- rnorm(1000, mean = 2, sd = 2)
y.lin <- x1 * runif(1, 2, 4) + rnorm(1000, mean = 0, sd = 1) # Simple
y.mult <- x1 * runif(1, 2, 4) + x2 * runif(1, 2, 4) + x1 * x2 * runif(1, -4, 4) + rnorm(1000, mean = 0, sd = 3) #multiple
y.poli <- x1 * runif(1, -4, 4)  + x1^2 * runif(1, -4, -2) + x1^3 * runif(1, -4, 4) +  rnorm(1000, mean = 10, sd = 10) # polinomial
lin.rels <- data.frame(x1, x2, y.lin, y.mult, y.poli)
m.simp <- lm(y.lin ~ x1, lin.rels)
summary(m.simp)
m.mult <- lm(y.mult ~  x1 * x2, lin.rels)
summary(m.mult)
m.poli <- lm(y.poli ~ x1 + I(x1^2) + I(x1^3), lin.rels)
summary(m.poli)
